<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string></string>
	<key>connections</key>
	<dict>
		<key>3DC2C092-281B-435F-ACB6-B7624A4B74B0</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6E399669-A98B-436E-BF47-3F0AAECBE1C1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>6A171D73-19F3-45BF-935E-A2523716F6E1</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3DC2C092-281B-435F-ACB6-B7624A4B74B0</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>6C8FF314-EEEF-451F-91B8-6CD96557ADB6</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>C0360AFB-6A8A-4A80-8FE4-87340F157AD3</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>C0360AFB-6A8A-4A80-8FE4-87340F157AD3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A3481C3B-1483-419B-96C7-CB2CC0A40433</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Takes arguments as tags — adds your browser's frontmost tab as a pinboard bookmark</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>PinAdd</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>token=$(cut -d " " -f1 &lt;(echo "{query}"))
browser=$(cut -d " " -f2 &lt;(echo "{query}"))

rm details

echo ${token} &gt;&gt; details
echo ${browser} &gt;&gt; details</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>3DC2C092-281B-435F-ACB6-B7624A4B74B0</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>output</key>
				<integer>0</integer>
				<key>removeextension</key>
				<false/>
				<key>sticky</key>
				<false/>
				<key>text</key>
				<string>Configuration done</string>
				<key>title</key>
				<string>PinAdd</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>6E399669-A98B-436E-BF47-3F0AAECBE1C1</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>output</key>
				<integer>0</integer>
				<key>removeextension</key>
				<false/>
				<key>sticky</key>
				<false/>
				<key>text</key>
				<string>Bookmark added</string>
				<key>title</key>
				<string>PinAdd</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>A3481C3B-1483-419B-96C7-CB2CC0A40433</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># Set your API Token here (get it at "https://pinboard.in/settings/password")
token="$(cat details | sed -n 1p)"

# Set your prefered browser (comment with a "#" the one you do not want to use)
browser="$(cat details | sed -n 2p)"

# Check if token and browser are set
# If not, redirect to webpage with instructions
if [[ ! -s details ]]; then
	osascript -e 'open location ""'
	exit 1
fi

# Get browser's frontmost tab's url and title, and set the tags for Pinboard
# Arguments must be url-encoded (hence the 'perl')
if [[ ${browser} == "chrome" || ${browser} == "Chrome" ]]; then
	url=$(osascript -e 'tell application "Google Chrome" to return URL of active tab of front window' | perl -MURI::Escape -wlne 'print uri_escape ($_)')
	title=$(osascript -e 'tell application "Google Chrome" to return title of active tab of front window' | perl -MURI::Escape -wlne 'print uri_escape ($_)')
elif [[ ${browser} == "Safari" || ${browser} == "safari" ]]; then
	url=$(osascript -e 'tell application "Safari" to return URL of front document' | perl -MURI::Escape -wlne 'print uri_escape ($_)')
	title=$(osascript -e 'tell application "Safari" to return name of front document' | perl -MURI::Escape -wlne 'print uri_escape ($_)')
fi

tags=$(echo "{query}" | perl -MURI::Escape -wlne 'print uri_escape ($_)')

# Add the bookmark
curl --silent "https://api.pinboard.in/v1/posts/add?url=${url}&amp;description=${title}&amp;tags=${tags}&amp;auth_token=${token}"

exit 0</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>C0360AFB-6A8A-4A80-8FE4-87340F157AD3</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>pinset</string>
				<key>subtext</key>
				<string>Takes two arguments — your pinboard API token and preferred browser (in that order) separated by a space</string>
				<key>text</key>
				<string>PinSet</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>6A171D73-19F3-45BF-935E-A2523716F6E1</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>keyword</key>
				<string>pin</string>
				<key>subtext</key>
				<string>Takes arguments as tags — adds your browser's frontmost tab as a pinboard bookmark</string>
				<key>text</key>
				<string>PinAdd</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>6C8FF314-EEEF-451F-91B8-6CD96557ADB6</string>
		</dict>
	</array>
	<key>readme</key>
	<string>You need to add your Pinboard's API Token (get it at "https://pinboard.in/settings/password") on the line that says “token=""”

If you use Safari instead of Chrome, you need to change that option in the script by commenting the respective line. More instructions on the extension itself.</string>
	<key>uidata</key>
	<dict>
		<key>3DC2C092-281B-435F-ACB6-B7624A4B74B0</key>
		<dict>
			<key>ypos</key>
			<real>130</real>
		</dict>
		<key>6A171D73-19F3-45BF-935E-A2523716F6E1</key>
		<dict>
			<key>ypos</key>
			<real>130</real>
		</dict>
		<key>6C8FF314-EEEF-451F-91B8-6CD96557ADB6</key>
		<dict>
			<key>ypos</key>
			<real>10</real>
		</dict>
		<key>6E399669-A98B-436E-BF47-3F0AAECBE1C1</key>
		<dict>
			<key>ypos</key>
			<real>130</real>
		</dict>
		<key>A3481C3B-1483-419B-96C7-CB2CC0A40433</key>
		<dict>
			<key>ypos</key>
			<real>10</real>
		</dict>
		<key>C0360AFB-6A8A-4A80-8FE4-87340F157AD3</key>
		<dict>
			<key>ypos</key>
			<real>10</real>
		</dict>
	</dict>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
