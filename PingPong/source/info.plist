<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.pingpong</string>
	<key>connections</key>
	<dict>
		<key>4935E4E5-9198-4348-9FC2-9333F65EB86C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A6BFBD66-A039-416B-AD6D-3D70D55FC2F0</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>56BA617E-2DE5-4D64-8C30-D0FD4844DE6C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A6BFBD66-A039-416B-AD6D-3D70D55FC2F0</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>60116713-040A-484C-8D7F-869093CFE306</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>7E29DB24-9807-4458-B2B9-6D1CDA6D0A10</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>A6BFBD66-A039-416B-AD6D-3D70D55FC2F0</key>
		<array/>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Play a round of table tennis with Alfred</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>PingPong</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>ping</string>
				<key>queuedelaycustom</key>
				<integer>1</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Please wait…</string>
				<key>script</key>
				<string>scoreFile="/tmp/pingpongscore"
if [[ -f "${scoreFile}" ]]; then
  rm "${scoreFile}"
fi

cat &lt;&lt; EOF
  &lt;?xml version='1.0'?&gt;&lt;items&gt;
    &lt;item uid='easy' valid='yes' arg='easy'&gt;
      &lt;title&gt;Easy&lt;/title&gt;
      &lt;subtitle&gt;No time limit, just play around a bit&lt;/subtitle&gt;
      &lt;icon&gt;icon.png&lt;/icon&gt;
    &lt;/item&gt;
    &lt;item uid='medium' valid='yes' arg='medium'&gt;
      &lt;title&gt;Medium&lt;/title&gt;
      &lt;subtitle&gt;Doable, but you might reach for the shortcut keys&lt;/subtitle&gt;
      &lt;icon&gt;icon.png&lt;/icon&gt;
    &lt;/item&gt;
    &lt;item uid='hard' valid='yes' arg='hard'&gt;
      &lt;title&gt;Hard&lt;/title&gt;
      &lt;subtitle&gt;This was supposed to be relaxing&lt;/subtitle&gt;
      &lt;icon&gt;icon.png&lt;/icon&gt;
    &lt;/item&gt;
  &lt;/items&gt;
EOF</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Play a round of table tennis with Alfred</string>
				<key>title</key>
				<string>PingPong</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>56BA617E-2DE5-4D64-8C30-D0FD4844DE6C</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>scoreFile='/tmp/pingpongscore'
if [[ ! -f "${scoreFile}" ]]; then
  echo -n "-1" &gt; "${scoreFile}"
fi

if [[ '{query}' == "miss" ]]; then
  osascript -e "tell application \"Alfred 3\" to search \"scorepingpong\""
else
  score=$[$(cat "${scoreFile}") + 1]
  echo "${score}" &gt; "${scoreFile}"

  difficulty() {
    sleep "${1}"
    osascript -e "tell application \"Alfred 3\" to search \"scorepingpong\""
  }

  if [[ '{query}' == "medium" ]]; then
    difficulty 2 &amp;
  elif [[ '{query}' == "hard" ]]; then
    difficulty 1 &amp;
  fi

  osascript -e "tell application \"Alfred 3\" to search \"pong {query}\""
fi</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>A6BFBD66-A039-416B-AD6D-3D70D55FC2F0</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>pong</string>
				<key>queuedelaycustom</key>
				<integer>1</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Please wait… Ping!</string>
				<key>script</key>
				<string>echo "&lt;?xml version='1.0'?&gt;&lt;items&gt;"
randomNum="$(grep -m1 -ao '[1-9]' /dev/urandom | head -1)"
for (( i = 1; i &lt;= 9; i++ )); do
  if [[ "${i}" == "${randomNum}" ]]; then
    smack="Pong!"
    echo "&lt;item uuid='Smack' valid='yes' arg='{query}'&gt;"
  else
    smack="Miss!"
    echo "&lt;item uuid='Smack' valid='yes' arg='miss'&gt;"
  fi
  echo "&lt;item uid='Smack' valid='yes' arg='miss'&gt;"
  echo "&lt;title&gt;${smack}&lt;/title&gt;"
  echo "&lt;icon&gt;icon.png&lt;/icon&gt;"
  echo "&lt;/item&gt;"
done
echo "&lt;/items&gt;"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>You need to call “ping” to start a game</string>
				<key>title</key>
				<string>PingPong</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>4935E4E5-9198-4348-9FC2-9333F65EB86C</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>readonly local_file='info.plist'
readonly remote_file="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly workflow_type='workflow'
frequency_check='15'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED UNLESS YOU KNOW WHAT YOU ARE DOING
function abort {
  echo "${1}" 1&gt;&amp;2
  exit 1
}

function url_exists {
  if curl --silent --location --output /dev/null --fail --range 0-0 "${1}"; then
    return 0
  else
    return 1
  fi
}

function notification {
  local readonly terminal_notifier="$(find . -name terminal-notifier.app)"

  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}"/Contents/MacOS/terminal-notifier -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
  else
    osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
  fi
}

# Local sanity checks
[[ ! -f "${local_file}" ]] &amp;&amp; abort "'local_file' ("${local_file}") appears to not point to an existing file."
[[ ! "${workflow_type}" =~ ^(workflow|page)$ ]] &amp;&amp; abort "'workflow_type' ("${workflow_type}") needs to be one of 'workflow' or 'page'."
[[ ! "${frequency_check}" =~ ^[0-9]+$ ]] &amp;&amp; abort "'frequency_check' ("${frequency_check}") appears to not be a number."

# Check for updates
if [[ $(find "${local_file}" -mtime +"${frequency_check}") ]]; then
  if ! url_exists "${remote_file}"; then abort "'remote_file' ("${remote_file}") appears to not be reachable."; fi # Remote sanity check
  
  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_file}"

  if [[ "$(diff "${local_file}" "${tmp_file}")" ]]; then
    if [[ "${workflow_type}" == 'page' ]]; then
      notification 'Opening download page…'
      open "${workflow_url}"
    else
      if url_exists "${workflow_url}"; then
        notification 'Downloading and installing…'
        curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${workflow_url}"
        open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
      else
        abort "'workflow_url' ("${workflow_url}") appears to not be reachable."
      fi # url_exists
    fi # workflow_type
  else
    touch "${local_file}" # Reset timer by touching local file
  fi # diff
fi #find</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>7E29DB24-9807-4458-B2B9-6D1CDA6D0A10</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>scorepingpong</string>
				<key>queuedelaycustom</key>
				<integer>1</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Your score is…</string>
				<key>script</key>
				<string>scoreFile="/tmp/pingpongscore"
score=$(cat "${scoreFile}")

if [[ "${score}" == "0" ]]; then
  message="Try again."
elif [[ "${score}" == "1" ]]; then
  message="You’ve smacked the ball once."
elif [[ "${score}" &gt; "1" ]]; then
  message="You’ve smacked the ball ${score} times."
else
  message="Call “ping” in Alfred, to start a game."
fi

cat &lt;&lt; EOF
  &lt;?xml version='1.0'?&gt;&lt;items&gt;
    &lt;item uuid='Score' valid='no'&gt;
      &lt;title&gt;PingPong score&lt;/title&gt;
      &lt;subtitle&gt;${message}&lt;/subtitle&gt;
      &lt;icon&gt;icon.png&lt;/icon&gt;
    &lt;/item&gt;
  &lt;/items&gt;
EOF</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Shows how many time you’ve responded</string>
				<key>title</key>
				<string>PingPong score</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>60116713-040A-484C-8D7F-869093CFE306</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Play a round of table tennis against Alfred! Well, technically it’s more like playing against /dev/urandom, but you’re doing so through Alfred.

Call `ping`, to start a game, and hit `Pong!` to continue playing.

![](http://i.imgur.com/RADofXX.png)
![](http://i.imgur.com/y1TXFIW.png)

If you `Miss!`, the game is over and your score is shown.

![](http://i.imgur.com/2idS1tT.png)

You might also want to try [TurnShoot](https://github.com/vitorgalvao/alfred-workflows/tree/master/TurnShoot), a two-player game.</string>
	<key>uidata</key>
	<dict>
		<key>4935E4E5-9198-4348-9FC2-9333F65EB86C</key>
		<dict>
			<key>xpos</key>
			<integer>100</integer>
			<key>ypos</key>
			<integer>130</integer>
		</dict>
		<key>56BA617E-2DE5-4D64-8C30-D0FD4844DE6C</key>
		<dict>
			<key>xpos</key>
			<integer>100</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>60116713-040A-484C-8D7F-869093CFE306</key>
		<dict>
			<key>xpos</key>
			<integer>100</integer>
			<key>ypos</key>
			<integer>250</integer>
		</dict>
		<key>7E29DB24-9807-4458-B2B9-6D1CDA6D0A10</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>300</integer>
			<key>ypos</key>
			<integer>250</integer>
		</dict>
		<key>A6BFBD66-A039-416B-AD6D-3D70D55FC2F0</key>
		<dict>
			<key>xpos</key>
			<integer>300</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
	</dict>
	<key>version</key>
	<string>1.0.0</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
