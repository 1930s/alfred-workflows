<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.respondquickly</string>
	<key>connections</key>
	<dict>
		<key>AFA539B0-9BB1-43CD-96FB-1AA6866EA13B</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B5D50DD5-AB63-4406-AA30-3C731D7CD43B</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B5D50DD5-AB63-4406-AA30-3C731D7CD43B</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>8CB9A286-0D57-4AF9-8AD3-AFB73F8E2693</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Convert selected text to a QR code</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>RespondQuickly</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>qr_image="$(mktemp).png"
encoded_text="$(perl -MURI::Escape -wlne 'print uri_escape ($_)' &lt;&lt;&lt; "${1}" | perl -pe 's/\n/%0A/')"
 
curl --location --silent --output "${qr_image}" "http://chart.apis.google.com/chart?cht=qr&amp;chs=400x400&amp;chl=${encoded_text}&amp;chld=H|0"

qlmanage -p "${qr_image}"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>B5D50DD5-AB63-4406-AA30-3C731D7CD43B</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly workflow_type='workflow'
readonly frequency_check='15'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED UNLESS YOU KNOW WHAT YOU ARE DOING
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  readonly local notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/MacOS/applet" "${1}" "${alfred_workflow_name}" 'A new version is available'
    return
  fi

  readonly local terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${workflow_type}" =~ ^(workflow|page)$ ]] || abort "'workflow_type' (${workflow_type}) needs to be one of 'workflow' or 'page'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" != "${remote_version}" ]]; then
    if [[ "${workflow_type}" == 'page' ]]; then
      notification 'Opening download page…'
      open "${workflow_url}"
    else
      if url_exists "${workflow_url}"; then
        notification 'Downloading and installing…'
        curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${workflow_url}"
        open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
      else
        abort "'workflow_url' (${workflow_url}) appears to not be reachable."
      fi # url_exists
    fi # workflow_type
  else
    touch "${local_info_plist}" # Reset timer by touching local file
  fi # diff
fi #find</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>8CB9A286-0D57-4AF9-8AD3-AFB73F8E2693</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>1</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>12</integer>
				<key>hotmod</key>
				<integer>1835008</integer>
				<key>hotstring</key>
				<string>Q</string>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>AFA539B0-9BB1-43CD-96FB-1AA6866EA13B</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Select some text, press the keyboard shortcut, and it’ll convert it to a QR Code that’ll be opened with QuickLook.</string>
	<key>uidata</key>
	<dict>
		<key>8CB9A286-0D57-4AF9-8AD3-AFB73F8E2693</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>490</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>AFA539B0-9BB1-43CD-96FB-1AA6866EA13B</key>
		<dict>
			<key>xpos</key>
			<integer>70</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>B5D50DD5-AB63-4406-AA30-3C731D7CD43B</key>
		<dict>
			<key>xpos</key>
			<integer>280</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
	</dict>
	<key>version</key>
	<string>1.1.1</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
