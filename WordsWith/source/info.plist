<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.wordswith</string>
	<key>connections</key>
	<dict>
		<key>1D095271-389F-4505-902D-5AF68688F6E7</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>48E0B375-6946-4835-9199-3F8B6B635C3D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>48E0B375-6946-4835-9199-3F8B6B635C3D</key>
		<array/>
		<key>778E4F38-788D-4E00-9E69-FC152B66D872</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>48E0B375-6946-4835-9199-3F8B6B635C3D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>9F8DFE1B-6223-42BE-B785-885660C4F1E6</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>48E0B375-6946-4835-9199-3F8B6B635C3D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Find words that contain a particular pattern</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>WordsWith</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>tell application "Alfred 3" to search "define {query}"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>6</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>48E0B375-6946-4835-9199-3F8B6B635C3D</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>wws</string>
				<key>queuedelaycustom</key>
				<integer>1</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Please wait…</string>
				<key>script</key>
				<string>echo "&lt;?xml version='1.0'?&gt;&lt;items&gt;"
for word in $(grep "^{query}" /usr/share/dict/words); do
	echo "&lt;item uid='start' arg='${word}' valid='yes'&gt;"
	echo "&lt;title&gt;${word}&lt;/title&gt;"
	echo "&lt;subtitle&gt;&lt;/subtitle&gt;"
	echo "&lt;icon&gt;icon.png&lt;/icon&gt;"
	echo "&lt;/item&gt;"
done
echo "&lt;/items&gt;"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Words starting with…</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>9F8DFE1B-6223-42BE-B785-885660C4F1E6</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>wwa</string>
				<key>queuedelaycustom</key>
				<integer>1</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Please wait…</string>
				<key>script</key>
				<string>echo "&lt;?xml version='1.0'?&gt;&lt;items&gt;"
for word in $(grep ".*{query}.*" /usr/share/dict/words); do
	echo "&lt;item uid='anywhere' arg='${word}' valid='yes'&gt;"
	echo "&lt;title&gt;${word}&lt;/title&gt;"
	echo "&lt;subtitle&gt;&lt;/subtitle&gt;"
	echo "&lt;icon&gt;icon.png&lt;/icon&gt;"
	echo "&lt;/item&gt;"
done
echo "&lt;/items&gt;"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Words containing…</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>1D095271-389F-4505-902D-5AF68688F6E7</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>wwe</string>
				<key>queuedelaycustom</key>
				<integer>1</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Please wait…</string>
				<key>script</key>
				<string>echo "&lt;?xml version='1.0'?&gt;&lt;items&gt;"
for word in $(grep "{query}$" /usr/share/dict/words); do
	echo "&lt;item uid='end' arg='${word}' valid='yes'&gt;"
	echo "&lt;title&gt;${word}&lt;/title&gt;"
	echo "&lt;subtitle&gt;&lt;/subtitle&gt;"
	echo "&lt;icon&gt;icon.png&lt;/icon&gt;"
	echo "&lt;/item&gt;"
done
echo "&lt;/items&gt;"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Words ending with…</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>778E4F38-788D-4E00-9E69-FC152B66D872</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>wws</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>script</key>
				<string>readonly local_file='info.plist'
readonly remote_file="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly workflow_type='workflow'
frequency_check='15'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED UNLESS YOU KNOW WHAT YOU ARE DOING
function abort {
  echo "${1}" 1&gt;&amp;2
  exit 1
}

function url_exists {
  if curl --silent --location --output /dev/null --fail --range 0-0 "${1}"; then
    return 0
  else
    return 1
  fi
}

function notification {
  local readonly terminal_notifier="$(find . -name terminal-notifier.app)"

  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}"/Contents/MacOS/terminal-notifier -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
  else
    osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
  fi
}

# Local sanity checks
[[ ! -f "${local_file}" ]] &amp;&amp; abort "'local_file' ("${local_file}") appears to not point to an existing file."
[[ ! "${workflow_type}" =~ ^(workflow|page)$ ]] &amp;&amp; abort "'workflow_type' ("${workflow_type}") needs to be one of 'workflow' or 'page'."
[[ ! "${frequency_check}" =~ ^[0-9]+$ ]] &amp;&amp; abort "'frequency_check' ("${frequency_check}") appears to not be a number."

# Check for updates
if [[ $(find "${local_file}" -mtime +"${frequency_check}") ]]; then
  if ! url_exists "${remote_file}"; then abort "'remote_file' ("${remote_file}") appears to not be reachable."; fi # Remote sanity check
  
  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_file}"

  if [[ "$(diff "${local_file}" "${tmp_file}")" ]]; then
    if [[ "${workflow_type}" == 'page' ]]; then
      notification 'Opening download page…'
      open "${workflow_url}"
    else
      if url_exists "${workflow_url}"; then
        notification 'Downloading and installing…'
        curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${workflow_url}"
        open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
      else
        abort "'workflow_url' ("${workflow_url}") appears to not be reachable."
      fi # url_exists
    fi # workflow_type
  else
    touch "${local_file}" # Reset timer by touching local file
  fi # diff
fi #find</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>DE7E9CF4-F0F7-4286-8103-23FB38D66978</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Call `ww` to get a list of options for how to search for a particular word — `wws` for words starting with the query, `wwa` for words that have it anywhere, and `wwe` for words ending in it. Add a word to search for, and it’ll filter in real time.

![](http://i.imgur.com/kAsToan.png)
![](http://i.imgur.com/qQPua4b.png)

Picking a word will then call Alfred with `define`, so you can see the meaning of it if you have that option enabled.</string>
	<key>uidata</key>
	<dict>
		<key>1D095271-389F-4505-902D-5AF68688F6E7</key>
		<dict>
			<key>xpos</key>
			<integer>80</integer>
			<key>ypos</key>
			<integer>130</integer>
		</dict>
		<key>48E0B375-6946-4835-9199-3F8B6B635C3D</key>
		<dict>
			<key>xpos</key>
			<integer>280</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>778E4F38-788D-4E00-9E69-FC152B66D872</key>
		<dict>
			<key>xpos</key>
			<integer>80</integer>
			<key>ypos</key>
			<integer>250</integer>
		</dict>
		<key>9F8DFE1B-6223-42BE-B785-885660C4F1E6</key>
		<dict>
			<key>xpos</key>
			<integer>80</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>DE7E9CF4-F0F7-4286-8103-23FB38D66978</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>80</integer>
			<key>ypos</key>
			<integer>370</integer>
		</dict>
	</dict>
	<key>version</key>
	<string>1.0.0</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
