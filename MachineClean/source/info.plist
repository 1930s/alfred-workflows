<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.machineclean</string>
	<key>connections</key>
	<dict>
		<key>D9245730-36BC-415E-BF86-FB40B9A7A25F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>78F747FB-BB88-4569-A5A8-63E3A97BFBEA</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>FED5D171-D581-4C00-9172-DD195380AC73</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>D9245730-36BC-415E-BF86-FB40B9A7A25F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Lock your keyboard and trackpad temporarily, so you can clean them</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>MachineClean</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>keyword</key>
				<string>macclean</string>
				<key>subtext</key>
				<string>Type a number of seconds, or leave empty for the default (50 seconds)</string>
				<key>text</key>
				<string>MachineClean</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>FED5D171-D581-4C00-9172-DD195380AC73</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>readonly local_file='info.plist'
readonly remote_file="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly workflow_type='workflow'
frequency_check='15'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED UNLESS YOU KNOW WHAT YOU ARE DOING
function abort {
  echo "${1}" 1&gt;&amp;2
  exit 1
}

function url_exists {
  if curl --silent --location --output /dev/null --fail --range 0-0 "${1}"; then
    return 0
  else
    return 1
  fi
}

function notification {
  local readonly terminal_notifier="$(find . -name terminal-notifier.app)"

  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}"/Contents/MacOS/terminal-notifier -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
  else
    osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
  fi
}

# Local sanity checks
[[ ! -f "${local_file}" ]] &amp;&amp; abort "'local_file' ("${local_file}") appears to not point to an existing file."
[[ ! "${workflow_type}" =~ ^(workflow|page)$ ]] &amp;&amp; abort "'workflow_type' ("${workflow_type}") needs to be one of 'workflow' or 'page'."
[[ ! "${frequency_check}" =~ ^[0-9]+$ ]] &amp;&amp; abort "'frequency_check' ("${frequency_check}") appears to not be a number."

# Check for updates
if [[ $(find "${local_file}" -mtime +"${frequency_check}") ]]; then
  if ! url_exists "${remote_file}"; then abort "'remote_file' ("${remote_file}") appears to not be reachable."; fi # Remote sanity check
  
  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_file}"

  if [[ "$(diff "${local_file}" "${tmp_file}")" ]]; then
    if [[ "${workflow_type}" == 'page' ]]; then
      notification 'Opening download page…'
      open "${workflow_url}"
    else
      if url_exists "${workflow_url}"; then
        notification 'Downloading and installing…'
        curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${workflow_url}"
        open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
      else
        abort "'workflow_url' ("${workflow_url}") appears to not be reachable."
      fi # url_exists
    fi # workflow_type
  else
    touch "${local_file}" # Reset timer by touching local file
  fi # diff
fi #find</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>78F747FB-BB88-4569-A5A8-63E3A97BFBEA</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>notification() {
	./_licensed/terminal-notifier/terminal-notifier.app/Contents/MacOS/terminal-notifier -title "${alfred_workflow_name}" -message "${1}"
}

default_time='50'

time='{query}'
[[ -z "${time}" ]] &amp;&amp; time="${default_time}"

# Abort if on a MacBook Air
if [[ "$(sysctl hw.model)" == *'MacBookAir'* ]]; then
  notification 'This workflow does not yet work on the MacBook Air'
  open 'https://github.com/vitorgalvao/alfred-workflows/issues/19'
  exit 1
fi

keyboard=$(kextstat | grep -i 'keyboard' | head -1 | awk '{ print $6 }')
trackpad=$(kextstat | grep -i 'multitouch' | head -1 | awk '{ print $6 }')

notification "Will lock trackpad and keyboard for ${time} seconds"

osascript &lt;&lt; EOS
  do shell script "kextunload -bundle-id ${keyboard} ; kextunload -bundle-id ${trackpad} ; sleep ${time} ; kextload -bundle-id ${keyboard} ; kextload -bundle-id ${trackpad}" with administrator privileges

  # Restart BetterTouchTool, if it is running
  if application "BetterTouchTool" is running then
    tell application "BetterTouchTool"
      quit
      delay 2
      activate
    end tell
  end if
EOS

notification 'Trackpad and keyboard unlocked'</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>D9245730-36BC-415E-BF86-FB40B9A7A25F</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Call `macclean` and optionally (default is 50) a number of seconds. Your keyboard and trackpad will be temporarily locked so you can clean them at will without messing what you’re doing.

![](http://i.imgur.com/VVYUonM.png)

The workflow will confirm how many seconds the locking will last
![](http://i.imgur.com/V8gO3Dq.png)

And send another notification when it unlocks
![](http://i.imgur.com/lnbxzyK.png)

You will be asked for your password when locking since this operation requires elevated privileges (which is a good thing). Do keep in mind that if something goes wrong in the process, you may (naturally) need to forcefully restart your machine. That is very unlikely and I’ve been using this for quite some time without any issues, but you should be aware of it.</string>
	<key>uidata</key>
	<dict>
		<key>78F747FB-BB88-4569-A5A8-63E3A97BFBEA</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>470</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>D9245730-36BC-415E-BF86-FB40B9A7A25F</key>
		<dict>
			<key>xpos</key>
			<integer>280</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>FED5D171-D581-4C00-9172-DD195380AC73</key>
		<dict>
			<key>xpos</key>
			<integer>90</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
	</dict>
	<key>version</key>
	<string>1.0.0</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
