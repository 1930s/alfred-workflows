<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.watchlist</string>
	<key>connections</key>
	<dict>
		<key>006E81EE-A542-4616-AE6B-5262EF4E59C5</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2A1A7853-05AD-43B6-AFF0-55104517AB51</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>0DDE2F4F-9DE8-4C40-BB85-ED0DF8C613EE</key>
		<array/>
		<key>10E44EB4-6139-4E72-AD84-137F581D67A1</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>7F8D7B1C-9061-4414-98C2-FEEB13C9314B</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>20803797-C5B6-42F9-9F31-1425E194C1C3</key>
		<array/>
		<key>2BD98040-76A3-48BE-8E0F-68D1F1F9C7E6</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>7EE6AEBF-1246-428C-B2E9-C9F5BBCB5EF4</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>2C22F42C-C25C-4D4C-AB42-C31CE9234895</key>
		<array/>
		<key>3B6BF175-810F-4D1C-9E89-0F8BE1BCA98D</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3FB08D9D-FA61-4076-A99A-E8B45A21CC8D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>7EE6AEBF-1246-428C-B2E9-C9F5BBCB5EF4</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>Open URL in default browser</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>3FB08D9D-FA61-4076-A99A-E8B45A21CC8D</key>
		<array/>
		<key>475F7D72-F65B-4E51-99C1-65C581528087</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2C22F42C-C25C-4D4C-AB42-C31CE9234895</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>4B343886-E096-4B4A-B04A-AC6574D6FB41</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0DDE2F4F-9DE8-4C40-BB85-ED0DF8C613EE</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>52C95301-2DF9-4A14-86FA-7917CFC49D39</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>20803797-C5B6-42F9-9F31-1425E194C1C3</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>7F8D7B1C-9061-4414-98C2-FEEB13C9314B</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>DE394F89-C4B4-497C-B6E8-5715050AC3CE</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>8FBC95B8-A15A-407C-8140-0C45FA2A3036</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>87E67178-1A36-458D-9883-D7A839F8E020</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B81E79EC-8587-4704-B6ED-6B72BD007014</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>A0CB4B50-6085-4C77-BA3D-435ABE469ECE</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B81E79EC-8587-4704-B6ED-6B72BD007014</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>A9B03347-978A-4547-9F09-AC992131AEFB</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>DE394F89-C4B4-497C-B6E8-5715050AC3CE</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>AA3CF56F-3E4D-4EB5-8019-B9E517648566</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2C22F42C-C25C-4D4C-AB42-C31CE9234895</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B81E79EC-8587-4704-B6ED-6B72BD007014</key>
		<array/>
		<key>C8A7E5CB-00A9-4A5B-9AD4-2D31987E06CE</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B81E79EC-8587-4704-B6ED-6B72BD007014</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>D6023D14-C151-44A0-BC02-08938DB9D46E</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>20803797-C5B6-42F9-9F31-1425E194C1C3</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>DE394F89-C4B4-497C-B6E8-5715050AC3CE</key>
		<array/>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Watch and manage local videos and streams</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>WatchList</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>acceptsmulti</key>
				<true/>
				<key>filetypes</key>
				<array/>
				<key>name</key>
				<string>Add to watchlist</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.action</string>
			<key>uid</key>
			<string>AA3CF56F-3E4D-4EB5-8019-B9E517648566</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>source ./watchlist_functions.sh
use_list towatch

if [[ ! -d "${non_volatile_prefs_dir}" ]]; then
  mkdir "${non_volatile_prefs_dir}"
fi

files_to_add=$(echo "{query}" | perl -pe 's/\t/\n/g' | tail -r)

for file in ${files_to_add}; do
  item_duration="$(./_licensed/mediainfo/mediainfo --Output='Video;%Duration/String2%' ${file})"
  item_size="$(du -h ${file} | perl -pe 's/^\s*(.*)\t.*/\1/')"
  item_title="$(basename ${file%.*})"

  new_item="file⸗${item_title}⸗${file}⸗${item_size}⸗${item_duration}"
  prepend "${new_item}" "${list}"
done

touch "${watched}"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>2C22F42C-C25C-4D4C-AB42-C31CE9234895</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>triggerid</key>
				<string>add_file_to_watchlist</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>475F7D72-F65B-4E51-99C1-65C581528087</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>swl</string>
				<key>subtext</key>
				<string>Adds url to play video from stream</string>
				<key>text</key>
				<string>Stream add (swl)</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>006E81EE-A542-4616-AE6B-5262EF4E59C5</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>source ./watchlist_functions.sh
use_list towatch

if [[ ! -d "${non_volatile_prefs_dir}" ]]; then
  mkdir "${non_volatile_prefs_dir}"
fi

item_location="$(pbpaste)"
item_title=$(youtube-dl --no-playlist --get-title "${item_location}")
item_duration=$(youtube-dl --no-playlist --get-duration "${item_location}" | rev | sed 's/^/s/;s/:/ nm/;s/:/ h/' | rev)

if [[ -n "${item_title}" ]]; then
  # fix for websites that need various video parts, causing title and duration to repeat
  total_parts=$(wc -l &lt;&lt;&lt; "${item_title}" | perl -pe 's/\s*//')
  if [[ "${total_parts}" &gt; 1 ]]; then
    remaining_parts="$((total_parts - 1))"
    item_title=$(head -1 &lt;&lt;&lt; "${item_title}" | sed "s/$/ (and ${remaining_parts} more)/")
    item_duration=$(head -1 &lt;&lt;&lt; "${item_duration}")
  fi

  new_item="stream⸗${item_title}⸗${item_location}⸗n/a (stream)⸗${item_duration}"
  prepend "${new_item}" "${list}"
  notification "Added ${item_title} as stream"
else
  notification 'Could not add that link as a stream'
  exit 1
fi

touch "${watched}"

# update youtube-dl if it's more than 15 days old
if [[ $(find youtube-dl -mtime +15) ]]; then
  python youtube-dl --update
fi</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>2A1A7853-05AD-43B6-AFF0-55104517AB51</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>wlp</string>
				<key>queuedelaycustom</key>
				<integer>1</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Please wait…</string>
				<key>script</key>
				<string>source ./watchlist_functions.sh
search_query='{query}'

if [[ -z $(cat ${towatch}) ]]; then
  echo "&lt;?xml version='1.0'?&gt;&lt;items&gt;"
  echo "&lt;item uuid='none' arg='none' valid='no'&gt;"
  echo "&lt;title&gt;Play (wlp)&lt;/title&gt;"
  echo "&lt;subtitle&gt;You have no files to watch&lt;/subtitle&gt;"
  echo "&lt;icon&gt;icon.png&lt;/icon&gt;"
  echo "&lt;/item&gt;"
  echo "&lt;/items&gt;"
else
  use_list towatch
  watch_script_filter "${search_query}"
fi</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Pick a file to play</string>
				<key>title</key>
				<string>Play (wlp)</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>7F8D7B1C-9061-4414-98C2-FEEB13C9314B</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>source ./watchlist_functions.sh
use_list towatch
line_number='{query}'

load_item "${line_number}"

play_file "${item_location}"

move_list_item "${line_number}"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>DE394F89-C4B4-497C-B6E8-5715050AC3CE</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>triggerid</key>
				<string>showlist</string>
				<key>triggername</key>
				<string>Show list</string>
				<key>workflowonly</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.remote</string>
			<key>uid</key>
			<string>10E44EB4-6139-4E72-AD84-137F581D67A1</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>1</string>
				<key>argumenttype</key>
				<integer>3</integer>
				<key>triggerid</key>
				<string>playnext</string>
				<key>triggername</key>
				<string>Play next</string>
				<key>workflowonly</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.remote</string>
			<key>uid</key>
			<string>A9B03347-978A-4547-9F09-AC992131AEFB</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>readonly local_file='info.plist' # Local file to compare to remote_file
readonly remote_file='https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/WatchList/info.plist' # Remote file (URL) to compare to local_file
readonly workflow_url='https://github.com/packal/repository/raw/master/com.vitorgalvao.alfred.watchlist/watchlist.alfredworkflow' # URL to directly download workflow or workflow download page
readonly workflow_type='workflow' # Either 'workflow' if workflow_url points to direct download, or 'page' if it points to download page
readonly frequency_check='15' # Days between update checks

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED UNLESS YOU KNOW WHAT YOU ARE DOING
function abort {
  echo "${1}" 1&gt;&amp;2
  exit 1
}

function url_exists {
  if curl --silent --location --output /dev/null --fail --range 0-0 "${1}"; then
    return 0
  else
    return 1
  fi
}

function notification {
  local readonly terminal_notifier="$(find . -name terminal-notifier.app)"

  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}"/Contents/MacOS/terminal-notifier -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
  else
    osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
  fi
}

# Sanity checks
[[ ! -f "${local_file}" ]] &amp;&amp; abort '"local_file" appears to not point to an existing file'
if ! url_exists "${remote_file}"; then abort '"remote_file" appears to not be reachable'; fi
[[ ! "${workflow_type}" =~ ^(workflow|page)$ ]] &amp;&amp; abort '"workflow_type" needs to be one of "workflow" or "page"'
[[ ! "${frequency_check}" =~ ^[0-9]+$ ]] &amp;&amp; abort '"frequency_check" appears to not be a number'

# Check for updates
if [[ $(find "${local_file}" -mtime +"${frequency_check}") ]]; then
  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_file}"

  if [[ "$(diff "${local_file}" "${tmp_file}")" ]]; then
    if [[ "${workflow_type}" == 'page' ]]; then
      notification 'Opening download page…'
      open "${workflow_url}"
    else
      if url_exists "${workflow_url}"; then
        notification 'Downloading and installing…'
        curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${workflow_url}"
        open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
      else
        abort '"workflow_url" appears to not be reachable'
      fi # url_exists
    fi # workflow_type
  fi # diff
else
  touch "${local_file}" # Reset timer by touching local file
fi #find</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>8FBC95B8-A15A-407C-8140-0C45FA2A3036</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>source ./watchlist_functions.sh
use_list watched
line_number='{query}'

load_item "${line_number}"

move_list_item "${line_number}"

notification "Marked ${item_title} as unwatched"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>20803797-C5B6-42F9-9F31-1425E194C1C3</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>wlu</string>
				<key>queuedelaycustom</key>
				<integer>1</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Please wait…</string>
				<key>script</key>
				<string>source ./watchlist_functions.sh
search_query='{query}'

if [[ -z $(cat ${watched}) ]]; then
  echo "&lt;?xml version='1.0'?&gt;&lt;items&gt;"
  echo "&lt;item uuid='none' arg='none' valid='no'&gt;"
  echo "&lt;title&gt;Play (wlu)&lt;/title&gt;"
  echo "&lt;subtitle&gt;You have no unwatched files&lt;/subtitle&gt;"
  echo "&lt;icon&gt;icon.png&lt;/icon&gt;"
  echo "&lt;/item&gt;"
  echo "&lt;/items&gt;"
else
  use_list watched
  watch_script_filter "${search_query}"
fi</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Pick a file to mark as unwatched</string>
				<key>title</key>
				<string>Unwatch (wlu)</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>52C95301-2DF9-4A14-86FA-7917CFC49D39</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>1</string>
				<key>argumenttype</key>
				<integer>3</integer>
				<key>triggerid</key>
				<string>unwatchlast</string>
				<key>triggername</key>
				<string>Unwatch last</string>
				<key>workflowonly</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.remote</string>
			<key>uid</key>
			<string>D6023D14-C151-44A0-BC02-08938DB9D46E</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>wle</string>
				<key>subtext</key>
				<string>Open the lists in your default text editor, for manual editing</string>
				<key>text</key>
				<string>Edit (wle)</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>4B343886-E096-4B4A-B04A-AC6574D6FB41</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>source ./watchlist_functions.sh

touch "${towatch}" "${watched}"
open -t "${towatch}" "${watched}"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>0DDE2F4F-9DE8-4C40-BB85-ED0DF8C613EE</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>wld</string>
				<key>subtext</key>
				<string>Move your watched files to the trash</string>
				<key>text</key>
				<string>Delete (wld)</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>C8A7E5CB-00A9-4A5B-9AD4-2D31987E06CE</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>source ./watchlist_functions.sh
use_list watched

cat "${list}" | cut -d'⸗' -f3 | perl -pe 's/\n/\0/' | xargs -0 ./_licensed/trash/trash
cat /dev/null &gt; "${list}"

notification "Watched files were moved to the trash"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>B81E79EC-8587-4704-B6ED-6B72BD007014</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>triggerid</key>
				<string>deletewatched</string>
				<key>triggername</key>
				<string>Delete watched</string>
				<key>workflowonly</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.remote</string>
			<key>uid</key>
			<string>87E67178-1A36-458D-9883-D7A839F8E020</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>triggerid</key>
				<string>delete_watched_files_from_watchlist</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>A0CB4B50-6085-4C77-BA3D-435ABE469ECE</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>wls</string>
				<key>queuedelaycustom</key>
				<integer>1</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Please wait…</string>
				<key>script</key>
				<string>source ./watchlist_functions.sh
search_query='{query}'

if [[ -z $(cat ${watched}) ]]; then
  echo "&lt;?xml version='1.0'?&gt;&lt;items&gt;"
  echo "&lt;item uuid='none' arg='none' valid='no'&gt;"
  echo "&lt;title&gt;Share (wls)&lt;/title&gt;"
  echo "&lt;subtitle&gt;You need to use this with watched files&lt;/subtitle&gt;"
  echo "&lt;icon&gt;icon.png&lt;/icon&gt;"
  echo "&lt;/item&gt;"
  echo "&lt;/items&gt;"
else
  use_list share
  watch_script_filter "${search_query}"
fi</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Get URL from where item is from</string>
				<key>title</key>
				<string>Share (wls)</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>3B6BF175-810F-4D1C-9E89-0F8BE1BCA98D</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>source ./watchlist_functions.sh
use_list share
line_number='{query}'

load_item "${line_number}"

url=$(get_item_origin_url "${item_type}" "${item_location}")

echo -n "${url}" | pbcopy

notification "Copied link to clipboard"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>3FB08D9D-FA61-4076-A99A-E8B45A21CC8D</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>1</string>
				<key>argumenttype</key>
				<integer>3</integer>
				<key>triggerid</key>
				<string>sharelast</string>
				<key>triggername</key>
				<string>Share last</string>
				<key>workflowonly</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.remote</string>
			<key>uid</key>
			<string>2BD98040-76A3-48BE-8E0F-68D1F1F9C7E6</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>source ./watchlist_functions.sh
use_list share
line_number='{query}'

load_item "${line_number}"

url=$(get_item_origin_url "${item_type}" "${item_location}")

open "${url}"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>7EE6AEBF-1246-428C-B2E9-C9F5BBCB5EF4</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>View and manage a list of files and video streams, at your own pace. It was done with video in mind, but works with just about any file or directory.
 
Very often we have series of videos and streams that we’d like to watch but not necessarily keep after, but keeping track of them all and which we’ve already seen (and are thus safe to get rid of), can be a chore.
 
To use, select in the Finder the files (or directories) you wish to add to your list, and apply the file action `Add to watchlist`. Every time you do this, the new files will be appended to the list. You then have some options you can pick from, all starting with `wl`.

![](http://i.imgur.com/rN3bl4u.png)

If you choose any of the options that let you pick from a list (`wlp`, `wlu`, and `wls`) and continue typing after it (don’t put a space, just continue typing), you’ll start filtering — names, file sizes, durations, and a few more — so you can quickly find the ones you want.

![](http://i.imgur.com/F3CuxuD.png)

Items starting with a ≈ are streams. They also show no file size (since they aren’t taking up any) and show the link they were taken from, as opposed to a location on disk. To be able to stream video, you need to have either [mpv](http://mpv.io/) or [VLC](http://www.videolan.org/vlc/index.html).

![](http://i.imgur.com/HTe0cH9.png)

Sharing is particularly useful when you want to send the original link of something you watched to someone else, or to save it somewhere. It also gets it from downloaded files, if they have that metadata ([DownVid](http://www.alfredforum.com/topic/2045-downvid-%E2%80%94-download-videos-from-popular-sources/), for example, adds it to downloaded videos). Use ⌘ to open the url in the default browser, as opposed to copying to the clipboard.

![](http://i.imgur.com/pleW6Qs.png)

`swl` will add the url in your clipboard as a stream.

You can also control parts of the workflow with [Alfred Remote](http://www.alfredapp.com/remote/).

![](http://i.imgur.com/ylgLbGJ.png)

If you use [DownVid](http://www.alfredforum.com/topic/2045-downvid-%E2%80%94-download-videos-from-popular-sources/), it has an option to add the downloaded video files directly to your watchlist.</string>
	<key>uidata</key>
	<dict>
		<key>006E81EE-A542-4616-AE6B-5262EF4E59C5</key>
		<dict>
			<key>xpos</key>
			<integer>300</integer>
			<key>ypos</key>
			<real>250</real>
		</dict>
		<key>0DDE2F4F-9DE8-4C40-BB85-ED0DF8C613EE</key>
		<dict>
			<key>xpos</key>
			<integer>500</integer>
			<key>ypos</key>
			<real>850</real>
		</dict>
		<key>10E44EB4-6139-4E72-AD84-137F581D67A1</key>
		<dict>
			<key>xpos</key>
			<integer>100</integer>
			<key>ypos</key>
			<real>370</real>
		</dict>
		<key>20803797-C5B6-42F9-9F31-1425E194C1C3</key>
		<dict>
			<key>xpos</key>
			<integer>500</integer>
			<key>ypos</key>
			<real>610</real>
		</dict>
		<key>2A1A7853-05AD-43B6-AFF0-55104517AB51</key>
		<dict>
			<key>xpos</key>
			<integer>500</integer>
			<key>ypos</key>
			<integer>250</integer>
		</dict>
		<key>2BD98040-76A3-48BE-8E0F-68D1F1F9C7E6</key>
		<dict>
			<key>xpos</key>
			<integer>100</integer>
			<key>ypos</key>
			<real>1450</real>
		</dict>
		<key>2C22F42C-C25C-4D4C-AB42-C31CE9234895</key>
		<dict>
			<key>xpos</key>
			<integer>500</integer>
			<key>ypos</key>
			<real>10</real>
		</dict>
		<key>3B6BF175-810F-4D1C-9E89-0F8BE1BCA98D</key>
		<dict>
			<key>xpos</key>
			<integer>300</integer>
			<key>ypos</key>
			<real>1330</real>
		</dict>
		<key>3FB08D9D-FA61-4076-A99A-E8B45A21CC8D</key>
		<dict>
			<key>xpos</key>
			<integer>500</integer>
			<key>ypos</key>
			<real>1330</real>
		</dict>
		<key>475F7D72-F65B-4E51-99C1-65C581528087</key>
		<dict>
			<key>xpos</key>
			<integer>100</integer>
			<key>ypos</key>
			<real>130</real>
		</dict>
		<key>4B343886-E096-4B4A-B04A-AC6574D6FB41</key>
		<dict>
			<key>xpos</key>
			<integer>300</integer>
			<key>ypos</key>
			<real>850</real>
		</dict>
		<key>52C95301-2DF9-4A14-86FA-7917CFC49D39</key>
		<dict>
			<key>xpos</key>
			<integer>300</integer>
			<key>ypos</key>
			<real>610</real>
		</dict>
		<key>7EE6AEBF-1246-428C-B2E9-C9F5BBCB5EF4</key>
		<dict>
			<key>xpos</key>
			<integer>500</integer>
			<key>ypos</key>
			<real>1450</real>
		</dict>
		<key>7F8D7B1C-9061-4414-98C2-FEEB13C9314B</key>
		<dict>
			<key>xpos</key>
			<integer>300</integer>
			<key>ypos</key>
			<real>370</real>
		</dict>
		<key>87E67178-1A36-458D-9883-D7A839F8E020</key>
		<dict>
			<key>xpos</key>
			<integer>100</integer>
			<key>ypos</key>
			<real>1090</real>
		</dict>
		<key>8FBC95B8-A15A-407C-8140-0C45FA2A3036</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>500</integer>
			<key>ypos</key>
			<integer>490</integer>
		</dict>
		<key>A0CB4B50-6085-4C77-BA3D-435ABE469ECE</key>
		<dict>
			<key>xpos</key>
			<integer>100</integer>
			<key>ypos</key>
			<real>1210</real>
		</dict>
		<key>A9B03347-978A-4547-9F09-AC992131AEFB</key>
		<dict>
			<key>xpos</key>
			<integer>100</integer>
			<key>ypos</key>
			<real>490</real>
		</dict>
		<key>AA3CF56F-3E4D-4EB5-8019-B9E517648566</key>
		<dict>
			<key>xpos</key>
			<integer>100</integer>
			<key>ypos</key>
			<real>10</real>
		</dict>
		<key>B81E79EC-8587-4704-B6ED-6B72BD007014</key>
		<dict>
			<key>xpos</key>
			<integer>500</integer>
			<key>ypos</key>
			<real>970</real>
		</dict>
		<key>C8A7E5CB-00A9-4A5B-9AD4-2D31987E06CE</key>
		<dict>
			<key>xpos</key>
			<integer>300</integer>
			<key>ypos</key>
			<real>970</real>
		</dict>
		<key>D6023D14-C151-44A0-BC02-08938DB9D46E</key>
		<dict>
			<key>xpos</key>
			<integer>100</integer>
			<key>ypos</key>
			<real>730</real>
		</dict>
		<key>DE394F89-C4B4-497C-B6E8-5715050AC3CE</key>
		<dict>
			<key>xpos</key>
			<integer>500</integer>
			<key>ypos</key>
			<real>370</real>
		</dict>
	</dict>
	<key>version</key>
	<string>1.11.1</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
